{"ast":null,"code":"import _classCallCheck from \"/Users/kaoru/prg/react-todo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kaoru/prg/react-todo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kaoru/prg/react-todo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kaoru/prg/react-todo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kaoru/prg/react-todo/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/kaoru/prg/react-todo/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/kaoru/prg/react-todo/src/components/List.js\";\nimport React from 'react'; // import '../css/List.css'\n\nvar List =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(List, _React$Component);\n\n  function List(props) {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this, props));\n    _this.state = {\n      checkedIndex: [],\n      isChecked: new Array(_this.props.todoList.length).fill(false)\n    };\n    _this.handleCheckChange = _this.handleCheckChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"handleCheckChange\",\n    value: function handleCheckChange(changedItemIndex, event) {\n      if (event.target.checked) {\n        this.setState({\n          checkedIndex: this.state.checkedIndex.concat(changedItemIndex)\n        });\n      } else {\n        this.setState({\n          checkedIndex: this.state.checkedIndex.filter(function (el) {\n            return el !== changedItemIndex;\n          })\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var listItems = this.props.todoList.map(function (todo, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          checked: _this2.state.check,\n          onChange: function onChange(event) {\n            return _this2.handleCheckChange(index, event);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }), todo);\n      });\n      return React.createElement(\"div\", {\n        className: \"list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, listItems), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: function onClick(event) {\n          return _this2.props.deleteTodo(_this2.state.checkedIndex, event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"\\u524A\\u9664\\u3059\\u308B\"));\n    }\n  }]);\n\n  return List;\n}(React.Component);\n\nexport { List as default };","map":{"version":3,"sources":["/Users/kaoru/prg/react-todo/src/components/List.js"],"names":["React","List","props","state","checkedIndex","isChecked","Array","todoList","length","fill","handleCheckChange","bind","changedItemIndex","event","target","checked","setState","concat","filter","el","listItems","map","todo","index","check","deleteTodo","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;IAEqBC,I;;;;;AACjB,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,EADL;AAETC,MAAAA,SAAS,EAAE,IAAIC,KAAJ,CAAU,MAAKJ,KAAL,CAAWK,QAAX,CAAoBC,MAA9B,EAAsCC,IAAtC,CAA2C,KAA3C;AAFF,KAAb;AAKA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,uDAAzB;AAPe;AAQlB;;;;sCAEiBC,gB,EAAkBC,K,EAAO;AACvC,UAAGA,KAAK,CAACC,MAAN,CAAaC,OAAhB,EAAwB;AACpB,aAAKC,QAAL,CAAc;AACVZ,UAAAA,YAAY,EAAE,KAAKD,KAAL,CAAWC,YAAX,CAAwBa,MAAxB,CAA+BL,gBAA/B;AADJ,SAAd;AAGH,OAJD,MAIK;AACD,aAAKI,QAAL,CAAc;AACVZ,UAAAA,YAAY,EAAE,KAAKD,KAAL,CAAWC,YAAX,CAAwBc,MAAxB,CAA+B,UAACC,EAAD,EAAQ;AACjD,mBAAOA,EAAE,KAAKP,gBAAd;AACH,WAFa;AADJ,SAAd;AAKH;AACJ;;;6BAEQ;AAAA;;AACL,UAAMQ,SAAS,GAAG,KAAKlB,KAAL,CAAWK,QAAX,CAAoBc,GAApB,CAAwB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACvD,eACI;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,OAAO,EAAE,MAAI,CAACpB,KAAL,CAAWqB,KAFxB;AAGI,UAAA,QAAQ,EAAE,kBAACX,KAAD;AAAA,mBAAW,MAAI,CAACH,iBAAL,CAAuBa,KAAvB,EAA8BV,KAA9B,CAAX;AAAA,WAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAKKS,IALL,CADJ;AASH,OAViB,CAAlB;AAYA,aACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKF,SADL,CADJ,EAII;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,OAAO,EAAE,iBAACP,KAAD;AAAA,iBAAW,MAAI,CAACX,KAAL,CAAWuB,UAAX,CAAsB,MAAI,CAACtB,KAAL,CAAWC,YAAjC,EAA+CS,KAA/C,CAAX;AAAA,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAJJ,CADJ;AAUH;;;;EAhD6Bb,KAAK,CAAC0B,S;;SAAnBzB,I","sourcesContent":["import React from 'react';\n\n// import '../css/List.css'\n\nexport default class List extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            checkedIndex: [],\n            isChecked: new Array(this.props.todoList.length).fill(false),\n        };\n\n        this.handleCheckChange = this.handleCheckChange.bind(this);\n    }\n\n    handleCheckChange(changedItemIndex, event) {\n        if(event.target.checked){\n            this.setState({\n                checkedIndex: this.state.checkedIndex.concat(changedItemIndex),\n            });\n        }else{\n            this.setState({\n                checkedIndex: this.state.checkedIndex.filter((el) => {\n                    return el !== changedItemIndex;\n                }),\n            });\n        }\n    }\n\n    render() {\n        const listItems = this.props.todoList.map((todo, index) => {\n            return (\n                <li key={index}>\n                    <input\n                        type=\"checkbox\"\n                        checked={this.state.check}\n                        onChange={(event) => this.handleCheckChange(index, event)} />\n                    {todo}\n                </li>\n            );\n        });\n\n        return (\n            <div className=\"list\">\n                <ul>\n                    {listItems}\n                </ul>\n                <button\n                    type=\"button\"\n                    onClick={(event) => this.props.deleteTodo(this.state.checkedIndex, event)}>削除する</button>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}