{"ast":null,"code":"import _classCallCheck from \"/Users/kaoru/prg/react-todo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kaoru/prg/react-todo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kaoru/prg/react-todo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kaoru/prg/react-todo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kaoru/prg/react-todo/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/kaoru/prg/react-todo/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/kaoru/prg/react-todo/src/components/List.js\";\nimport React from 'react'; // import '../css/List.css'\n\nvar List =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(List, _React$Component);\n\n  function List(props) {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this, props));\n    _this.state = {\n      checkedIndex: []\n    };\n    _this.handleCheckChange = _this.handleCheckChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"handleCheckChange\",\n    value: function handleCheckChange(index, event) {\n      this.setState({\n        checkedIndex: this.state.checkedIndex.concat(index)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var listItems = this.props.todoList.map(function (todo, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          checked: _this2.state.check,\n          onChange: function onChange(event) {\n            return _this2.handleCheckChange(index, event);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }), todo);\n      });\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, listItems);\n    }\n  }]);\n\n  return List;\n}(React.Component);\n\nexport { List as default };","map":{"version":3,"sources":["/Users/kaoru/prg/react-todo/src/components/List.js"],"names":["React","List","props","state","checkedIndex","handleCheckChange","bind","index","event","setState","concat","listItems","todoList","map","todo","check","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;IAEqBC,I;;;;;AACjB,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE;AADL,KAAb;AAIA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,uDAAzB;AANe;AAOlB;;;;sCAEiBC,K,EAAOC,K,EAAO;AAC5B,WAAKC,QAAL,CAAc;AACVL,QAAAA,YAAY,EAAE,KAAKD,KAAL,CAAWC,YAAX,CAAwBM,MAAxB,CAA+BH,KAA/B;AADJ,OAAd;AAGH;;;6BAEQ;AAAA;;AACL,UAAMI,SAAS,GAAG,KAAKT,KAAL,CAAWU,QAAX,CAAoBC,GAApB,CAAwB,UAACC,IAAD,EAAOP,KAAP,EAAiB;AACvD,eACI;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,OAAO,EAAE,MAAI,CAACJ,KAAL,CAAWY,KAFxB;AAGI,UAAA,QAAQ,EAAE,kBAACP,KAAD;AAAA,mBAAW,MAAI,CAACH,iBAAL,CAAuBE,KAAvB,EAA8BC,KAA9B,CAAX;AAAA,WAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAKKM,IALL,CADJ;AASH,OAViB,CAAlB;AAYA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKH,SADL,CADJ;AAKH;;;;EAlC6BX,KAAK,CAACgB,S;;SAAnBf,I","sourcesContent":["import React from 'react';\n\n// import '../css/List.css'\n\nexport default class List extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            checkedIndex: [],\n        };\n\n        this.handleCheckChange = this.handleCheckChange.bind(this);\n    }\n\n    handleCheckChange(index, event) {\n        this.setState({\n            checkedIndex: this.state.checkedIndex.concat(index),\n        });\n    }\n\n    render() {\n        const listItems = this.props.todoList.map((todo, index) => {\n            return (\n                <li key={index}>\n                    <input\n                        type=\"checkbox\"\n                        checked={this.state.check}\n                        onChange={(event) => this.handleCheckChange(index, event)} />\n                    {todo}\n                </li>\n            );\n        });\n\n        return (\n            <ul>\n                {listItems}\n            </ul>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}