{"ast":null,"code":"import _classCallCheck from \"/Users/kaoru/prg/react-todo/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kaoru/prg/react-todo/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kaoru/prg/react-todo/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kaoru/prg/react-todo/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kaoru/prg/react-todo/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/kaoru/prg/react-todo/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/kaoru/prg/react-todo/frontend/src/components/Todo.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport '../css/style.css';\nimport Form from './Form.js';\nimport List from './List.js';\nvar endPointUrl = 'http://localhost:8000/api';\n\nvar Todo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Todo, _React$Component);\n\n  function Todo(props) {\n    var _this;\n\n    _classCallCheck(this, Todo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Todo).call(this, props));\n    _this.getTodo = _this.getTodo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addTodo = _this.addTodo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteTodo = _this.deleteTodo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleIsChecked = _this.toggleIsChecked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleIsDone = _this.toggleIsDone.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      todoList: []\n    };\n\n    _this.getTodo();\n\n    return _this;\n  }\n\n  _createClass(Todo, [{\n    key: \"getTodo\",\n    value: function getTodo() {\n      var _this2 = this;\n\n      var todoData;\n      axios.get(\"\".concat(endPointUrl, \"/todos/\")).then(function (res) {\n        todoData = res.data.map(function (obj) {\n          obj.isChecked = false;\n          return obj;\n        });\n\n        _this2.setState({\n          todoList: todoData\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"addTodo\",\n    value: function addTodo(todoText) {\n      var _this3 = this;\n\n      axios.post(\"\".concat(endPointUrl, \"/todos/\"), {\n        body: todoText,\n        isDone: false\n      }).then(function (res) {\n        _this3.getTodo();\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"deleteTodo\",\n    value: function deleteTodo() {\n      var newState = this.state.todoList.filter(function (todoObj, index) {\n        if (todoObj.isChecked) {\n          axios.delete(\"\".concat(endPointUrl, \"/todos/\").concat(todoObj.uuid, \"/\")).then(function (res) {\n            console.log(res);\n          }).catch(function (err) {\n            console.log(err);\n          });\n        }\n\n        return !todoObj.isChecked;\n      });\n      this.setState({\n        todoList: newState\n      });\n    }\n  }, {\n    key: \"toggleIsChecked\",\n    value: function toggleIsChecked(index) {\n      var newTodoList = this.state.todoList;\n      newTodoList[index].isChecked = !this.state.todoList[index].isChecked;\n      this.setState({\n        todoList: newTodoList\n      });\n    }\n  }, {\n    key: \"toggleIsDone\",\n    value: function toggleIsDone(index) {\n      var _this4 = this;\n\n      axios.put(\"\".concat(endPointUrl, \"/todos/\").concat(this.state.todoList[index].uuid, \"/\"), {\n        body: this.state.todoList[index].body,\n        isDone: !this.state.todoList[index].isDone\n      }).then(function (res) {\n        _this4.getTodo();\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"todo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"todo__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"React ToDo App\"), React.createElement(Form, {\n        addTodo: this.addTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"ToDo List\"), React.createElement(List, {\n        todoList: this.state.todoList,\n        deleteTodo: this.deleteTodo,\n        toggleIsChecked: this.toggleIsChecked,\n        toggleIsDone: this.toggleIsDone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Todo;\n}(React.Component);\n\nexport { Todo as default };","map":{"version":3,"sources":["/Users/kaoru/prg/react-todo/frontend/src/components/Todo.js"],"names":["React","axios","Form","List","endPointUrl","Todo","props","getTodo","bind","addTodo","deleteTodo","toggleIsChecked","toggleIsDone","state","todoList","todoData","get","then","res","data","map","obj","isChecked","setState","catch","err","console","log","todoText","post","body","isDone","newState","filter","todoObj","index","delete","uuid","newTodoList","put","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nimport '../css/style.css';\nimport Form from './Form.js';\nimport List from './List.js';\n\nconst endPointUrl = 'http://localhost:8000/api';\n\nexport default class Todo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.getTodo = this.getTodo.bind(this);\n        this.addTodo = this.addTodo.bind(this);\n        this.deleteTodo = this.deleteTodo.bind(this);\n        this.toggleIsChecked = this.toggleIsChecked.bind(this);\n        this.toggleIsDone = this.toggleIsDone.bind(this);\n\n        this.state = {\n            todoList: [],\n        };\n        this.getTodo();\n    }\n\n    getTodo() {\n        let todoData;\n        axios\n            .get(`${endPointUrl}/todos/`)\n            .then(res => {\n                todoData = res.data.map((obj) => {\n                    obj.isChecked = false;\n                    return obj;\n                });\n                this.setState({\n                    todoList: todoData,\n                });\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    addTodo(todoText) {\n        axios.post(`${endPointUrl}/todos/`, {\n            body: todoText,\n            isDone: false,\n        }).then(res => {\n            this.getTodo();\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    deleteTodo() {\n        const newState = this.state.todoList.filter((todoObj, index) => {\n            if(todoObj.isChecked){\n                axios.delete(`${endPointUrl}/todos/${todoObj.uuid}/`)\n                    .then(res => {\n                        console.log(res);\n                    }).catch(err => {\n                        console.log(err);\n                    });\n            }\n\n            return !todoObj.isChecked;\n        });\n        this.setState({\n            todoList: newState,\n        });\n    }\n\n    toggleIsChecked(index) {\n        const newTodoList = this.state.todoList;\n        newTodoList[index].isChecked = !this.state.todoList[index].isChecked;\n        this.setState({\n            todoList: newTodoList,\n        });\n    }\n\n    toggleIsDone(index) {\n        axios.put(`${endPointUrl}/todos/${this.state.todoList[index].uuid}/`, {\n            body: this.state.todoList[index].body,\n            isDone: !this.state.todoList[index].isDone,\n        }).then(res => {\n            this.getTodo();\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"todo\">\n                <h1 className=\"todo__title\">React ToDo App</h1>\n                <Form\n                    addTodo={this.addTodo}\n                />\n                <h2>ToDo List</h2>\n                <List\n                    todoList={this.state.todoList}\n                    deleteTodo={this.deleteTodo}\n                    toggleIsChecked={this.toggleIsChecked}\n                    toggleIsDone={this.toggleIsDone}\n                />\n            </div>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}